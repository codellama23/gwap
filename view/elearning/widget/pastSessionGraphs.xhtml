<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:s="http://jboss.com/products/seam/taglib"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:rich="http://richfaces.org/rich"
    xmlns:a4j="http://richfaces.org/a4j"   >
    
	<a4j:loadScript src="/javascript/processing.js" />
	<script type="text/javascript"> 
		function getScale(max, min, appearence){
			var scale = 1;
			if(appearence > min){
				scale = 15 * (appearence - min)/(max - min);
			}
			return 10 + scale;
		}

		function setLineBreaks(tag){
			tag = tag.trim();
			tag = tag.replace(/ +(?= )/g,''); //replace multiple whitespaces 
			tag = tag.replace(/ /g,"\n"); //replace whitespaces with linebreak
			return tag;
		}
	
		function dataQuery(){
			console.log("jquery");
			//initializeVariables();
			jQuery.ajax({
				url      : "seam/resource/rest/pastTerminaSession/userResults", 
 				data	 : {'term': term, 
 	 						'owr': document.getElementById("selectionForm:chk1").checked, 
 	 						'fwr': document.getElementById("selectionForm:chk2").checked,
 	 						'mfn': document.getElementById("selectionForm:maxForeignNodes").value,
 	 						'mon': document.getElementById("selectionForm:maxOwnNodes").value},
				dataType : "json", 
				success  : dataCallback,
			});
		}

		function dataCallback(data){
			//data zerlegen
			console.log("callback");
			term = data["term"];
			//var userTags = data["userTags"];
			maxApp = data["maxApp"];
			minApp = data["minApp"];
			foreignTags = data["foreigns"];
			ownTags = data["owns"];

			displayData();
		}

		function displayData(){
			pjs = Processing.getInstanceById("TerminaGraph");
			pjs.setup();
			pjs.setTerm(setLineBreaks(term));
	
			for(var i = 0; i &lt; foreignTags.length; i++){
				var tag = foreignTags[i];
				console.log("foreign " + tag["tag"]);
				pjs.addForeignTag(setLineBreaks(tag["tag"]), 100, getScale(maxApp, minApp, tag["appearence"]), tag["matchType"]);
			}

			for(var i = 0; i &lt; ownTags.length; i++){
				var tag = ownTags[i];
				console.log("own " + tag["tag"]);
				pjs.addOwnTag(setLineBreaks(tag["tag"]), 100, getScale(maxApp, minApp, tag["appearence"]), tag["matchType"]);
			}

			pjs.separateTags();
			pjs.highlightOwnTags();
		}
		
		function selectTerm( val ){
			console.log("clicked " + val);
			term = val;
		}

		function enter(){
			console.log("enter");
		}
	</script>

	<table>
		<tr>
			<th>jovialer text</th>
		</tr>
		<tr>
			<td colspan="2">
				<h:form id="selectionForm">
					ownWrong:
					<h:selectBooleanCheckbox id="chk1" value="ownWrongRequested" onchange="dataQuery();"/>
					foreignWrong:
					<h:selectBooleanCheckbox id="chk2" value="foreignWrongRequested" onchange="dataQuery();" />
					max foreign nodes:
					<h:inputText id="maxForeignNodes" value="#{pastTerminaSession.maxForeigns}" />n
					max own nodes: 
					<h:inputText id="maxOwnNodes" value="#{pastTerminaSession.maxOwns}" />n
 					<rich:hotKey key="return" handler="dataQuery();"/>
 					
 				</h:form>
			</td>
		</tr>
		<tr>
			<td>
	            <rich:tree id="termSelectionTree" style="width:300px; height:300px; overflow-y:auto; " 
	            switchType="client" value="#{pastTerminaSession.treeNode}" var="item" nodeFace="#{item.type}">
	                <rich:treeNode type="term" onclick="selectTerm('#{item.val}'); dataQuery();">
	                	<h:outputText value="#{item.val}" />
	                </rich:treeNode>
	                <rich:treeNode type="topic">
	                	<h:outputText value="#{item.val}" />
	                </rich:treeNode>
	            </rich:tree>
			</td>
			<td>
			
				<canvas id="TerminaGraph" data-processing-sources="terminaGame/TerminaResultsMain.pde terminaGame/TerminaGraph.pde terminaGame/ResultGraph.pde terminaGame/Vertex.pde terminaGame/RoundedArc.pde" />
				<script type="text/javascript">
				var waiting = setInterval(function(){
					var pjs = Processing.getInstanceById('TerminaGraph');
					if(typeof pjs != 'undefined'){
						clearInterval(waiting);
						pjs.setTerm(setLineBreaks("WÃ¤hle einen Term"));
					}
				},10);
				</script>
			</td>
		</tr>	
	</table>


</ui:composition>